plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    id 'jacoco'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'site.askephoenix'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

configurations {
    asciidoctorExtensions
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    snippetsDir = file('build/generated-snippets')
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.4'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    developmentOnly 'org.springframework.boot:spring-boot-devtools:2.5.4'
    runtimeOnly 'org.postgresql:postgresql:42.2.23.jre7'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat:2.5.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.5'
    testImplementation 'org.springframework.security:spring-security-test:5.5.1'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.5.RELEASE'

    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.5.RELEASE'
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

test {
    useJUnitPlatform()
}

asciidoctor {
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir
    dependsOn test
}

bootWar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into 'src/main/resources/static/docs'
    }
}

bootJar{
    archiveFileName = "onterview-api.jar"
    layered{
        enabled = true

        application {
            intoLayer("spring-boot-loader") {
                include "org/springframework/boot/loader/**"
            }
            intoLayer("application")
        }

        dependencies {
            intoLayer("snapshot-dependencies") {
                include "*:*:*SNAPSHOT"
            }
            intoLayer("dependencies")
        }

        layerOrder = ["dependencies", "spring-boot-loader", "snapshot-dependencies", "application"]
    }
}
